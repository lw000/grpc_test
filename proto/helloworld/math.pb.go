// Code generated by protoc-gen-go. DO NOT EDIT.
// source: math.proto

package helloworld

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// AddRequest 请求数据格式
type AddRequest struct {
	A                    int32    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int32    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{0}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *AddRequest) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

// AddReply 响应数据格式
type AddReply struct {
	C                    int32    `protobuf:"varint,1,opt,name=c,proto3" json:"c,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddReply) Reset()         { *m = AddReply{} }
func (m *AddReply) String() string { return proto.CompactTextString(m) }
func (*AddReply) ProtoMessage()    {}
func (*AddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{1}
}

func (m *AddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReply.Unmarshal(m, b)
}
func (m *AddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReply.Marshal(b, m, deterministic)
}
func (m *AddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReply.Merge(m, src)
}
func (m *AddReply) XXX_Size() int {
	return xxx_messageInfo_AddReply.Size(m)
}
func (m *AddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddReply proto.InternalMessageInfo

func (m *AddReply) GetC() int32 {
	if m != nil {
		return m.C
	}
	return 0
}

// SubRequest 请求数据格式
type SubRequest struct {
	A                    int32    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int32    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubRequest) Reset()         { *m = SubRequest{} }
func (m *SubRequest) String() string { return proto.CompactTextString(m) }
func (*SubRequest) ProtoMessage()    {}
func (*SubRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{2}
}

func (m *SubRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubRequest.Unmarshal(m, b)
}
func (m *SubRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubRequest.Marshal(b, m, deterministic)
}
func (m *SubRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubRequest.Merge(m, src)
}
func (m *SubRequest) XXX_Size() int {
	return xxx_messageInfo_SubRequest.Size(m)
}
func (m *SubRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubRequest proto.InternalMessageInfo

func (m *SubRequest) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *SubRequest) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

// SubReply 响应数据格式
type SubReply struct {
	C                    int32    `protobuf:"varint,1,opt,name=c,proto3" json:"c,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubReply) Reset()         { *m = SubReply{} }
func (m *SubReply) String() string { return proto.CompactTextString(m) }
func (*SubReply) ProtoMessage()    {}
func (*SubReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f139a3799a86a974, []int{3}
}

func (m *SubReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubReply.Unmarshal(m, b)
}
func (m *SubReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubReply.Marshal(b, m, deterministic)
}
func (m *SubReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubReply.Merge(m, src)
}
func (m *SubReply) XXX_Size() int {
	return xxx_messageInfo_SubReply.Size(m)
}
func (m *SubReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SubReply.DiscardUnknown(m)
}

var xxx_messageInfo_SubReply proto.InternalMessageInfo

func (m *SubReply) GetC() int32 {
	if m != nil {
		return m.C
	}
	return 0
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "helloworld.AddRequest")
	proto.RegisterType((*AddReply)(nil), "helloworld.AddReply")
	proto.RegisterType((*SubRequest)(nil), "helloworld.SubRequest")
	proto.RegisterType((*SubReply)(nil), "helloworld.SubReply")
}

func init() { proto.RegisterFile("math.proto", fileDescriptor_f139a3799a86a974) }

var fileDescriptor_f139a3799a86a974 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x4d, 0x2c, 0xc9,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xca, 0x48, 0xcd, 0xc9, 0xc9, 0x2f, 0xcf, 0x2f,
	0xca, 0x49, 0x51, 0xd2, 0xe0, 0xe2, 0x72, 0x4c, 0x49, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e,
	0x11, 0xe2, 0xe1, 0x62, 0x4c, 0x94, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x62, 0x4c, 0x04, 0xf1,
	0x92, 0x24, 0x98, 0x20, 0xbc, 0x24, 0x25, 0x09, 0x2e, 0x0e, 0xb0, 0xca, 0x82, 0x9c, 0x4a, 0x90,
	0x4c, 0x32, 0x4c, 0x5d, 0x32, 0xc8, 0x8c, 0xe0, 0xd2, 0x24, 0x22, 0xcd, 0x00, 0xab, 0xc4, 0x30,
	0xc3, 0xa8, 0x9a, 0x8b, 0xdb, 0x37, 0xb1, 0x24, 0x23, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55,
	0xc8, 0x94, 0x8b, 0xd9, 0x31, 0x25, 0x45, 0x48, 0x4c, 0x0f, 0xe1, 0x54, 0x3d, 0x84, 0x3b, 0xa5,
	0x44, 0x30, 0xc4, 0x0b, 0x72, 0x2a, 0x95, 0x18, 0x40, 0xda, 0x82, 0x4b, 0x93, 0x50, 0xb5, 0x21,
	0x9c, 0x86, 0xaa, 0x0d, 0xe6, 0x10, 0x25, 0x86, 0x24, 0x36, 0x70, 0xb8, 0x18, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x85, 0xee, 0x29, 0x79, 0x25, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MathServiceClient is the client API for MathService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathServiceClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error)
	Sub(ctx context.Context, in *SubRequest, opts ...grpc.CallOption) (*SubReply, error)
}

type mathServiceClient struct {
	cc *grpc.ClientConn
}

func NewMathServiceClient(cc *grpc.ClientConn) MathServiceClient {
	return &mathServiceClient{cc}
}

func (c *mathServiceClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddReply, error) {
	out := new(AddReply)
	err := c.cc.Invoke(ctx, "/helloworld.MathService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathServiceClient) Sub(ctx context.Context, in *SubRequest, opts ...grpc.CallOption) (*SubReply, error) {
	out := new(SubReply)
	err := c.cc.Invoke(ctx, "/helloworld.MathService/Sub", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MathServiceServer is the server API for MathService service.
type MathServiceServer interface {
	Add(context.Context, *AddRequest) (*AddReply, error)
	Sub(context.Context, *SubRequest) (*SubReply, error)
}

func RegisterMathServiceServer(s *grpc.Server, srv MathServiceServer) {
	s.RegisterService(&_MathService_serviceDesc, srv)
}

func _MathService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.MathService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServiceServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MathService_Sub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServiceServer).Sub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.MathService/Sub",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServiceServer).Sub(ctx, req.(*SubRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MathService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.MathService",
	HandlerType: (*MathServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _MathService_Add_Handler,
		},
		{
			MethodName: "Sub",
			Handler:    _MathService_Sub_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "math.proto",
}
